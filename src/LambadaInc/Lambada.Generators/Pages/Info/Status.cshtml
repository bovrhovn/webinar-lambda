@page
@using Lambada.Generators.Options
@using Microsoft.Extensions.Options
@model Lambada.Generators.Pages.Info.StatusPageModel
@inject IOptions<SignalrOptions> SignalROptions

@{
    ViewData["Title"] = "Status page messages";
}

<h1>
    Status page update about messages
</h1>

<div class="row">
    <button type="button" id="btnClear" class="btn btn-sm btn-success mb-2 ">Clear messages</button>
</div>

<div id="messages" style="background-color: whitesmoke;"></div>

@section Scripts
{
    <script type="application/javascript">
       document.addEventListener('DOMContentLoaded', function () {
            const connection = new signalR.HubConnectionBuilder()
                        .withUrl('@SignalROptions.Value.MessagesUrl')
                        .build();
            bindConnectionMessage(connection);
            connection.start()
                      .then(() => onConnected(connection))
                      .catch(console.error);
            
            $("#btnClear").click(function (event) {
                            $("#messages").empty();
                            event.preventDefault();
            });
            
            function createMessageEntry(encodedMsg) {
                            let entry = document.createElement('div');                            
                            entry.innerHTML = '<div class="col-md-12 shadow-sm p-3 mb-5 bg-white rounded pull-left">' + encodedMsg +'<div>';                          
                            return entry;
                        }
            
            function bindConnectionMessage(connection) {
                  let messageCallback = function (message) {
                                if (!message) return;                                
                                let messageEntry = createMessageEntry(message);
                                let messageBox = document.getElementById('messages');
                                messageBox.appendChild(messageEntry);
                                messageBox.scrollTop = messageBox.scrollHeight;
                  };
                  connection.on('broadcastMessage', messageCallback); 
            }
                            
            function onConnected(connection) {
                    console.log('connection started');
                    connection.send('broadcastMessage', 'Connected to Azure SignalR service for messages retrieving');                                          
            }
        });
    </script>
}