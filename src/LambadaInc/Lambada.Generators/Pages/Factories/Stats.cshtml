@page "{factoryId}"
@using Microsoft.Extensions.Options
@using Lambada.Generators.Options
@using System.Globalization
@model Lambada.Generators.Pages.Factories.StatsPageModel

@inject IOptions<SignalrOptions> SignalROptions

@{
    ViewData["Title"] = "Stats";
}

<h1>
    Information about stats
</h1>

<div class="row">
    <div id="messages" class="col-md-12"></div>
</div>
@if (Model.StatModels.Any())
{
    <table class="table table-hover">
        <tr>
            <td>Value</td>
            <td>Created on</td>
        </tr>
        @foreach (var statModel in Model.StatModels)
        {
            <tr>
                <td>
                    @statModel.EarnedMoney
                </td>
                <td>@statModel.DateCreated.ToString(CultureInfo.InvariantCulture)</td>
            </tr>
        }
    </table>
}

@section Scripts
{
    <script type="application/javascript">
    document.addEventListener('DOMContentLoaded', function () {
                const statsConnection = new signalR.HubConnectionBuilder()
                            .withUrl('@SignalROptions.Value.StatsUrl')
                            .build();
                bindConnectionMessage(statsConnection);
                statsConnection.start()
                          .then(() => onConnected(statsConnection))
                          .catch(console.error);
                
                $("#btnClear").click(function (event) {
                                $("#messages").empty();
                                event.preventDefault();
                });
                
                function createMessageEntry(encodedMsg) {
                                let entry = document.createElement('div');                            
                                entry.innerHTML = '<div class="col-md-12 shadow-sm p-3 mb-5 bg-white rounded pull-left">' + encodedMsg +'<div>';                          
                                return entry;
                            }
                
                function bindConnectionMessage(connection) {
                      let messageCallback = function (message) {
                                    if (!message) return;                                
                                    let messageEntry = createMessageEntry(message);
                                    let messageBox = document.getElementById('messages');
                                    messageBox.appendChild("money is flowing <b>" + messageEntry + "</b> â‚¬");
                                    messageBox.scrollTop = messageBox.scrollHeight;
                      };
                      connection.on('stats', messageCallback); 
                }
                                
                function onConnected(connection) {
                        console.log('connection started');
                        connection.send('stats', 'Connected to Azure SignalR service for stats retrieving');                                          
                }
            });
    </script>
}